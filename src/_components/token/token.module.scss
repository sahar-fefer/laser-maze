@import '@/variables';

.token {
  width: $token-size;
  height: $token-size;
  border-radius: 12px;
  position: relative;
  overflow: hidden;

  &::after,
  &::before {
    content: '';
    position: absolute;
    box-sizing: border-box;
  }

  &.rotateOption {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: rotate 0.3s;
  }

  @keyframes nudging {
    to {
      rotate: 180deg;
    }
  }

  &:hover {
    .rotateButton {
      stroke: rgba(0, 0, 0, 1);
      animation: nudging 0.3s forwards;
    }
  }

  &.rotateRight {
    rotate: 0deg;
  }

  &.rotateBottom {
    rotate: 90deg;
  }

  &.rotateLeft {
    rotate: 180deg;
  }

  &.rotateTop {
    rotate: 270deg;
  }
}

.laser {
  background-color: $laser-primary;
  overflow: visible;
  //   opacity: 0.99;
  //   will-change: rotate;

  &::before {
    @include absTopCenter;
    $laserHeadSize: calc(#{$token-size} / 6);
    width: $laserHeadSize;
    height: $laserHeadSize;
    background-color: $laser-primary;
    border-radius: 6px;
    right: calc(#{$laserHeadSize} / -2.5);
    z-index: -1;
    // rotate: 0deg;
  }

  &::after {
    @include absCenter;
    $laserButtonSize: calc(#{$token-size} / 2);
    width: $laserButtonSize;
    height: $laserButtonSize;
    background-color: $laser-secondary;
    border-radius: 50%;
    box-shadow: 0px 0px 16px 5px #{$laser-tertiary};
    border: 1px solid #{$laser-tertiary};
  }
}

.target {
  background-color: $target-primary;

  &::before {
    width: $token-size;
    height: $token-size;
    border: 10px double #{$target-tertiary};
    border-radius: 12px;
  }

  &::after {
    width: $token-size;
    height: $token-size;
    background-color: $target-secondary;
    rotate: 45deg;
    transform: translate(50%, -50%);
  }
}

.mirror,
.doubleMirror {
  background-color: $mirror-primary;

  &::before {
    width: calc($token-size * 1.5);
    height: 16px;
    background-color: $mirror-tertiary;
    opacity: 0.8;
    border-bottom: 6px solid $mirror-secondary;
    rotate: -45deg;
    z-index: 3;
    transform: translate(-32%, 100%);
  }
}

.mirror {
  &::after {
    width: $token-size;
    height: calc($token-size * 1.5);
    background-color: $palladium;
    rotate: 45deg;
    transform: translate(-70%, -10%);
    z-index: 2;
  }
}

.checkpoint {
  background-color: $checkpoint-primary;

  &::before {
    width: 16px;
    height: calc($token-size - 20px);
    background-color: $checkpoint-tertiary;
    opacity: 0.8;
    border: 6px solid $checkpoint-secondary;
    border-radius: 8px;
  }
}

.blocker {
  background-color: $blocker-primary;
  $stone-size: calc(#{$token-size} / 2);

  &::before,
  &::after {
    width: $stone-size;
    height: $stone-size;
    background-color: $blocker-secondary;
  }

  &::after {
    right: 0;
    bottom: 0;
  }
}

.rotateButton {
  $rotateButtonSize: calc(#{$token-size} / 3);
  width: $rotateButtonSize;
  height: $rotateButtonSize;
  z-index: 4;
  stroke: rgba(0, 0, 0, 0.5);
  transition: stroke 0.2s, rotate 0.2s;
  rotate: 0deg;
  border-radius: 50%;
  background-color: rgba($color: $white, $alpha: 0.6);
}
